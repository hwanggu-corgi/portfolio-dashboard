{"version":3,"sources":["constants.js","components/Navigation/index.js","components/Form/index.js","components/Button/index.js","screens/InfoScreen/index.js","screens/ProjectDetailScreen/index.js","screens/ProjectsScreen/index.js","screens/WorkExperienceDetailScreen/index.js","screens/WorkExperiencesScreen/index.js","screens/HomeScreen/index.js","App.js","reportWebVitals.js","index.js"],"names":["PrimaryNavMenuStyle","Nav","styled","nav","constants","NavLinkNew","NavLink","PrimaryNavMenu","exact","to","UserStyle","Div","div","User","icon","faUser","SecondaryNavMenuStyle","Header","Span","span","SecondaryNavMenu","AddMoreButtonStyle","Button","button","Section","section","AddMoreButton","props","onClick","InputStyle","Input","input","InputListStyle","ButtonSection","FormGroup","KeyValueInputStyle","InputKey","InputValue","KeyValueInputListStyle","InputList","list","map","item","index","defaultValue","onAdd","KeyValueInput","KeyValueInputList","ButtonStyle","primary","secondary","children","InfoScreenStyle","H2","h2","InfoScreen","useState","contactsList","setContactsList","socialsList","setSocialsList","Form","_","oldArray","ProjectDetailScreenStyle","ProjectDetailScreen","highlightsList","imagesList","ProjectsScreenStyle","PageSection","PaginationSection","TableStyle","Table","table","Th","th","width_25","width_15","width_5","Td","td","PaginationStyle","bg_grey","Pagination","faChevronLeft","faChevronRight","ProjectsScreen","history","useHistory","push","faEdit","console","log","faTrashAlt","WorkExperienceDetailScreenStyle","WorkExperienceDetailScreen","WorkExperiencesScreenStyle","width_20","WorkExperiencesScreen","HomeScreenStyle","HomeScreen","AppStyle","Main","main","App","className","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a13fd454.chunk.js","sourcesContent":["const colorNavyBlue = '#1A1E43';\nconst colorWhite = '#FFFFFF';\nconst colorGrey = '#D7D7D7';\nconst colorOrange = '#FF7927';\nconst colorLightGrey = '#E9E9E9';\nconst colorPurple = '#8A8DCC';\nconst borderRadius = \"0.94rem\";\n\nexport default {\n    colorNavyBlue,\n    colorWhite,\n    colorGrey,\n    colorOrange,\n    colorPurple,\n    colorLightGrey,\n    borderRadius\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport constants from '../../constants';\n\nconst PrimaryNavMenuStyle = {\n    Nav: styled.nav`\n        max-width: 15rem;\n        border-radius: 0.94rem;\n        background-color: ${constants.colorNavyBlue};\n        color: ${constants.colorWhite};\n        margin: 2.39rem 1.17rem;\n\n        h2 {\n            padding: 2.30rem 2.0rem;\n            margin: 0;\n        }\n\n        ul {\n            margin: 0;\n            padding: 0;\n            list-style-type: none;\n        }\n\n        li {\n            padding: 1.03rem 2.0rem;\n            Cursor: pointer;\n            width: calc(15rem - 2.0rem * 2);\n        }\n    `,\n    NavLinkNew : styled(NavLink)`\n        text-decoration: none;\n        color: ${constants.colorWhite};\n\n        &.active {\n            font-weight: bold;\n        }\n    `\n};\n\nfunction PrimaryNavMenu() {\n    return (\n        <PrimaryNavMenuStyle.Nav>\n            <h2>Menu</h2>\n            <ul>\n                <li><PrimaryNavMenuStyle.NavLinkNew exact to=\"/admin\">Home</PrimaryNavMenuStyle.NavLinkNew></li>\n                <li><PrimaryNavMenuStyle.NavLinkNew to=\"/admin/info\">Info</PrimaryNavMenuStyle.NavLinkNew></li>\n                <li><PrimaryNavMenuStyle.NavLinkNew to=\"/admin/projects\">Projects</PrimaryNavMenuStyle.NavLinkNew></li>\n                <li><PrimaryNavMenuStyle.NavLinkNew to=\"/admin/work-experiences\">Work Experience</PrimaryNavMenuStyle.NavLinkNew></li>\n            </ul>\n        </PrimaryNavMenuStyle.Nav>\n    );\n};\n\nconst UserStyle = {\n    Div: styled.div`\n        border: 1px solid ${constants.colorPurple};\n        padding: 0.8em;\n        display: inline-block;\n        border-radius: 50%;\n        margin-right: 1em;\n\n        div {\n            width: 1.25em;\n            height: 1.25em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        path {\n            fill: ${constants.colorPurple};\n        }\n    `\n};\n\nfunction User() {\n    return (\n        <UserStyle.Div>\n            <div>\n                <FontAwesomeIcon icon={faUser}/>\n            </div>\n        </UserStyle.Div>\n    );\n};\n\nconst SecondaryNavMenuStyle = {\n    Header: styled.nav`\n       border-radius: ${constants.borderRadius};\n       padding: 0.52rem;\n       display: flex;\n       justify-content: flex-end;\n       align-items: center;\n       margin: 0 0 2.06rem 0;\n    `,\n    Span: styled.span`\n        margin-right: 0.75rem;\n\n        strong {\n            color: ${constants.colorPurple};\n        }\n    `\n};\n\nfunction SecondaryNavMenu() {\n    return (\n        <SecondaryNavMenuStyle.Header>\n            <SecondaryNavMenuStyle.Span>Hello, <strong>Admin</strong></SecondaryNavMenuStyle.Span>\n            <User/>\n        </SecondaryNavMenuStyle.Header>\n    );\n};\n\n\n\nexport {\n    PrimaryNavMenu,\n    SecondaryNavMenu,\n};","import styled from 'styled-components';\nimport constants from '../../constants';\n\n\nconst AddMoreButtonStyle = {\n    Button: styled.button`\n        color: ${constants.colorWhite};\n        border: none;\n        background-color: ${constants.colorPurple};\n        border-radius: 0.14rem;\n        padding: 0.16rem;\n        cursor: pointer;\n    `,\n    Div: styled.div`\n        width: 1.1rem;\n        height: 1.1rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    `,\n    Section: styled.section`\n        display: flex;\n        justify-content: center;\n    `\n};\n\nfunction AddMoreButton(props) {\n    return(\n        <AddMoreButtonStyle.Section>\n            <AddMoreButtonStyle.Button onClick={props.onClick}>\n                <AddMoreButtonStyle.Div>\n                <strong>+</strong>\n                </AddMoreButtonStyle.Div>\n            </AddMoreButtonStyle.Button>\n        </AddMoreButtonStyle.Section>\n    );\n}\n\nconst InputStyle = {\n    Div: styled.div`\n        display: flex;\n    `,\n    Input: styled.input`\n        border: 1px solid ${constants.colorGrey};\n        background-color: ${constants.colorLightGrey};\n        padding: 0.56rem;\n        flex-grow: 1;\n    `\n};\n\n\nfunction Input() {\n    return(\n        <InputStyle.Div>\n            <InputStyle.Input/>\n        </InputStyle.Div>\n    )\n};\n\nconst InputListStyle = {\n    Div: styled(InputStyle.Div)`\n        margin: 0 0 0.23rem 0;\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: center;\n    `\n};\n\nfunction InputList(props) {\n    return(\n        <>\n            {props.list.map((item, index) => (\n                <InputListStyle.Div key={index}>\n                    <InputStyle.Input defaultValue={item ? item : \"\"}/>\n                </InputListStyle.Div>\n            ))}\n            <InputListStyle.ButtonSection>\n                <AddMoreButton onClick={props.onAdd}/>\n            </InputListStyle.ButtonSection>\n        </>\n    );\n}\n\nconst FormGroup = styled.div`\n    margin: 0 0 0.6rem 0;\n\n    & > label {\n        margin: 0 0 0.6rem 0;\n    }\n\n    & > * {\n        display: block;\n    }\n\n    & > div {\n        display: flex;\n    }\n`;\n\nconst KeyValueInputStyle = {\n    Div: styled.div`\n        margin: 0 0 0.23rem 0;\n    `,\n    InputKey: styled.input`\n        border: 1px solid ${constants.colorGrey};\n        background-color: ${constants.colorLightGrey};\n        padding: 0.56rem;\n\n        max-width: 10.31rem;\n        margin: 0 0.23rem 0 0;\n        flex-grow: initial;\n    `,\n    InputValue: styled.input`\n        border: 1px solid ${constants.colorGrey};\n        background-color: ${constants.colorLightGrey};\n        padding: 0.56rem;\n        flex-grow: 1;\n    `\n};\n\nfunction KeyValueInput() {\n    return(\n        <KeyValueInputStyle.Div>\n            <KeyValueInputStyle.InputKey/><KeyValueInputStyle.InputValue/>\n        </KeyValueInputStyle.Div>\n    )\n};\n\n\nconst KeyValueInputListStyle = {\n    Div: styled(KeyValueInputStyle.Div)`\n        margin: 0 0 0.23rem 0;\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: center;\n    `\n};\n\nfunction KeyValueInputList(props) {\n    return(\n        <>\n            {props.list.map((item, index) => (\n                <KeyValueInputListStyle.Div key={index}>\n                    <KeyValueInputStyle.InputKey defaultValue={item[0] ? item[0] : \"\"}/><KeyValueInputStyle.InputValue defaultValue={item[1] ? item[1] : \"\"}/>\n                </KeyValueInputListStyle.Div>\n            ))}\n            <KeyValueInputListStyle.ButtonSection>\n                <AddMoreButton onClick={props.onAdd}/>\n            </KeyValueInputListStyle.ButtonSection>\n        </>\n    );\n}\n\n\nexport default {\n    Input,\n    InputList,\n    FormGroup,\n    KeyValueInput,\n    KeyValueInputList,\n    AddMoreButton,\n};","import styled from 'styled-components';\nimport constants from '../../constants';\n\n\nconst ButtonStyle = {\n    Button: styled.button`\n        border: transparent;\n        border-radius: ${constants.borderRadius};\n        background-color: ${props => {\n            if (props.primary) {\n                return constants.colorNavyBlue;\n            } else if (props.secondary) {\n                return constants.colorOrange;\n            }\n        }};\n        color: ${constants.colorWhite};\n        padding: 0.56rem;\n        cursor: pointer;\n\n    `,\n    Div: styled.div`\n        min-width: 6.09rem;\n    `\n}\n\nexport default function Button(props) {\n    return(\n        <ButtonStyle.Button {...props}>\n            <ButtonStyle.Div>\n                {props.children}\n            </ButtonStyle.Div>\n        </ButtonStyle.Button>\n    );\n}","import React, { useState } from 'react';\nimport Form from '../../components/Form'\nimport styled from 'styled-components';\nimport constants from '../../constants';\nimport Button from '../../components/Button';\n\nconst sectionPadding = \"1.31rem\";\n\nconst InfoScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n    `\n};\n\nfunction InfoScreen() {\n    let [contactsList, setContactsList] = useState([[\"\",\"\"]]);\n    let [socialsList, setSocialsList] = useState([[\"\",\"\"]]);\n\n    return (\n        <InfoScreenStyle.Section>\n            <InfoScreenStyle.H2>Personal Information</InfoScreenStyle.H2>\n            <InfoScreenStyle.ButtonSection>\n                <Button primary>\n                    Save\n                </Button>\n            </InfoScreenStyle.ButtonSection>\n            <form>\n                <Form.FormGroup>\n                    <label>Name</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Website</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Contact</label>\n                    <Form.KeyValueInputList list={contactsList} onAdd={_ => setContactsList(oldArray => [...oldArray, [\"\",\"\"]])}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Socials</label>\n                    <Form.KeyValueInputList list={socialsList} onAdd={_ => setSocialsList(oldArray => [...oldArray, [\"\",\"\"]])}/>\n                </Form.FormGroup>\n            </form>\n            <InfoScreenStyle.ButtonSection>\n                <Button primary>\n                    Save\n                </Button>\n            </InfoScreenStyle.ButtonSection>\n        </InfoScreenStyle.Section>\n    );\n}\n\nexport default InfoScreen;\n\n","import React, { useState } from 'react';\nimport Form from '../../components/Form'\nimport styled from 'styled-components';\nimport constants from '../../constants';\nimport Button from '../../components/Button';\n\nconst sectionPadding = \"1.31rem\";\n\nconst ProjectDetailScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n\n        button:not(:last-child) {\n            margin: 0 0.47rem 0 0;\n        }\n    `\n};\n\nfunction ProjectDetailScreen() {\n    let [highlightsList, setContactsList] = useState([\"\"]);\n    let [imagesList, setSocialsList] = useState([\"\"]);\n\n    return (\n        <ProjectDetailScreenStyle.Section>\n            <ProjectDetailScreenStyle.H2>Portfolio Dashboard</ProjectDetailScreenStyle.H2>\n            <ProjectDetailScreenStyle.ButtonSection>\n                <Button secondary>\n                    Delete\n                </Button>\n                <Button primary>\n                    Save\n                </Button>\n            </ProjectDetailScreenStyle.ButtonSection>\n            <form>\n                <Form.FormGroup>\n                    <label>Title</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Header Image</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Tools Used</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Highlights</label>\n                    <Form.InputList list={highlightsList} onAdd={_ => setContactsList(oldArray => [...oldArray, \"\"])}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Images</label>\n                    <Form.InputList list={imagesList} onAdd={_ => setSocialsList(oldArray => [...oldArray, \"\"])}/>\n                </Form.FormGroup>\n            </form>\n            <ProjectDetailScreenStyle.ButtonSection>\n                <Button primary>\n                    Save\n                </Button>\n            </ProjectDetailScreenStyle.ButtonSection>\n        </ProjectDetailScreenStyle.Section>\n    );\n}\n\nexport default ProjectDetailScreen;\n\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../components/Button';\nimport constants from '../../constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router';\n\nconst sectionPadding = \"1.31rem\";\n\nconst ProjectsScreenStyle = {\n    PageSection: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n    `,\n    PaginationSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n    `\n};\n\nconst TableStyle = {\n    Table: styled.table`\n        width: 100%;\n        border-collapse: collapse;\n        margin: 0;\n    `,\n    Th: styled.th`\n        background-color: ${constants.colorLightGrey};\n        font-weight: normal;\n        text-align: left;\n        padding: 0.75rem;\n        width: ${props => {\n            if (props.width_25) {\n                return \"25%\";\n            } else if (props.width_15) {\n                return \"15%\";\n            } else if (props.width_5) {\n                return \"5%\";\n            }\n        }}\n    `,\n    Td: styled.td`\n        padding: 0.75rem;\n    `,\n    Button: styled.button`\n        background-color: transparent;\n        border: none;\n        padding: 0.16rem;\n        cursor: pointer;\n\n        div {\n            width: 1.1rem;\n            height: 1.1rem;\n        }\n    `\n}\n\nconst PaginationStyle = {\n    Button: styled.button`\n        border: ${constants.colorGrey};\n        padding: 0.28rem;\n        background-color: ${props => {\n            if (props.bg_grey) {\n                return constants.colorGrey;\n            } else {\n                return constants.colorWhite;\n            }\n        }};\n        cursor: pointer;\n    `\n};\n\nfunction Pagination() {\n    return(\n        <div>\n            <PaginationStyle.Button bg_grey>\n                <FontAwesomeIcon icon={faChevronLeft}/>\n            </PaginationStyle.Button>\n            <PaginationStyle.Button>1</PaginationStyle.Button>\n            <PaginationStyle.Button>2</PaginationStyle.Button>\n            <PaginationStyle.Button>3</PaginationStyle.Button>\n            <PaginationStyle.Button bg_grey>\n                <FontAwesomeIcon icon={faChevronRight}/>\n            </PaginationStyle.Button>\n        </div>\n    );\n}\n\nfunction ProjectsScreen() {\n    let history = useHistory();\n\n    const deleteProject = () => {\n        console.log(\"This is temporary\");\n    }\n\n    return (\n        <ProjectsScreenStyle.PageSection>\n            <ProjectsScreenStyle.H2>Projects</ProjectsScreenStyle.H2>\n            <ProjectsScreenStyle.ButtonSection>\n                <Button primary>\n                    Add\n                </Button>\n            </ProjectsScreenStyle.ButtonSection>\n            <TableStyle.Table>\n                <thead>\n                    <tr>\n                        <TableStyle.Th width_25>Name</TableStyle.Th>\n                        <TableStyle.Th width_15>Date</TableStyle.Th>\n                        <TableStyle.Th width_25>Short Description</TableStyle.Th>\n                        <TableStyle.Th width_25>Tools Used</TableStyle.Th>\n                        <TableStyle.Th width_5></TableStyle.Th>\n                        <TableStyle.Th width_5></TableStyle.Th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <TableStyle.Td>Portfolio Dashboard</TableStyle.Td>\n                        <TableStyle.Td>March 1st, 2021</TableStyle.Td>\n                        <TableStyle.Td>Dashboard housing information for hyungmogu.com</TableStyle.Td>\n                        <TableStyle.Td>Node.js, PostgreSQL, ReactJS</TableStyle.Td>\n                        <TableStyle.Td>\n                            <TableStyle.Button onClick={_ => history.push(\"/admin/projects/1\")}>\n                                <div>\n                                    <FontAwesomeIcon icon={faEdit}/>\n                                </div>\n                            </TableStyle.Button>\n                        </TableStyle.Td>\n                        <TableStyle.Td>\n                            <TableStyle.Button onClick={_ => deleteProject(\"1\")}>\n                                <div>\n                                    <FontAwesomeIcon icon={faTrashAlt}/>\n                                </div>\n                            </TableStyle.Button>\n                        </TableStyle.Td>\n                    </tr>\n                </tbody>\n            </TableStyle.Table>\n            <ProjectsScreenStyle.PaginationSection>\n                <Pagination/>\n            </ProjectsScreenStyle.PaginationSection>\n        </ProjectsScreenStyle.PageSection>\n    );\n}\n\nexport default ProjectsScreen;\n","import React, { useState } from 'react';\nimport Form from '../../components/Form'\nimport styled from 'styled-components';\nimport constants from '../../constants';\nimport Button from '../../components/Button';\n\nconst sectionPadding = \"1.31rem\";\n\nconst WorkExperienceDetailScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n\n        button:not(:last-child) {\n            margin: 0 0.47rem 0 0;\n        }\n    `\n};\n\nfunction WorkExperienceDetailScreen() {\n    let [highlightsList, setContactsList] = useState([\"\"]);\n    let [imagesList, setSocialsList] = useState([\"\"]);\n\n    return (\n        <WorkExperienceDetailScreenStyle.Section>\n            <WorkExperienceDetailScreenStyle.H2>SiteMax Systems Inc.</WorkExperienceDetailScreenStyle.H2>\n            <WorkExperienceDetailScreenStyle.ButtonSection>\n                <Button secondary>\n                    Delete\n                </Button>\n                <Button primary>\n                    Save\n                </Button>\n            </WorkExperienceDetailScreenStyle.ButtonSection>\n            <form>\n                <Form.FormGroup>\n                    <label>Title</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Header Image</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Tools Used</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Highlights</label>\n                    <Form.InputList list={highlightsList} onAdd={_ => setContactsList(oldArray => [...oldArray, \"\"])}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Images</label>\n                    <Form.InputList list={imagesList} onAdd={_ => setSocialsList(oldArray => [...oldArray, \"\"])}/>\n                </Form.FormGroup>\n            </form>\n            <WorkExperienceDetailScreenStyle.ButtonSection>\n                <Button primary>\n                    Save\n                </Button>\n            </WorkExperienceDetailScreenStyle.ButtonSection>\n        </WorkExperienceDetailScreenStyle.Section>\n    );\n}\n\nexport default WorkExperienceDetailScreen;\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../../components/Button';\nimport constants from '../../constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router';\n\nconst sectionPadding = \"1.31rem\";\n\nconst WorkExperiencesScreenStyle = {\n    PageSection: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n    `,\n    PaginationSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n    `\n};\n\nconst TableStyle = {\n    Table: styled.table`\n        width: 100%;\n        border-collapse: collapse;\n        margin: 0;\n    `,\n    Th: styled.th`\n        background-color: ${constants.colorLightGrey};\n        font-weight: normal;\n        text-align: left;\n        padding: 0.75rem;\n        width: ${props => {\n            if (props.width_25) {\n                return \"25%\";\n            } else if (props.width_20) {\n                return \"20  %\";\n            } else if (props.width_15) {\n                return \"15%\";\n            } else if (props.width_5) {\n                return \"5%\";\n            }\n        }}\n    `,\n    Td: styled.td`\n        padding: 0.75rem;\n    `,\n    Button: styled.button`\n        background-color: transparent;\n        border: none;\n        padding: 0.16rem;\n        cursor: pointer;\n\n        div {\n            width: 1.1rem;\n            height: 1.1rem;\n        }\n    `\n}\n\nconst PaginationStyle = {\n    Button: styled.button`\n        border: ${constants.colorGrey};\n        padding: 0.28rem;\n        background-color: ${props => {\n            if (props.bg_grey) {\n                return constants.colorGrey;\n            } else {\n                return constants.colorWhite;\n            }\n        }};\n        cursor: pointer;\n    `\n};\n\nfunction Pagination() {\n    return(\n        <div>\n            <PaginationStyle.Button bg_grey>\n                <FontAwesomeIcon icon={faChevronLeft}/>\n            </PaginationStyle.Button>\n            <PaginationStyle.Button>1</PaginationStyle.Button>\n            <PaginationStyle.Button>2</PaginationStyle.Button>\n            <PaginationStyle.Button>3</PaginationStyle.Button>\n            <PaginationStyle.Button bg_grey>\n                <FontAwesomeIcon icon={faChevronRight}/>\n            </PaginationStyle.Button>\n        </div>\n    );\n}\n\nfunction WorkExperiencesScreen() {\n    const history = useHistory();\n    const deleteWorkExperience = () => {\n        console.log(\"This is temporary\");\n    }\n\n    return (\n        <WorkExperiencesScreenStyle.PageSection>\n            <WorkExperiencesScreenStyle.H2>Work Experiences</WorkExperiencesScreenStyle.H2>\n            <WorkExperiencesScreenStyle.ButtonSection>\n                <Button primary>\n                    Add\n                </Button>\n            </WorkExperiencesScreenStyle.ButtonSection>\n            <TableStyle.Table>\n                <tr>\n                    <TableStyle.Th width_25>Name</TableStyle.Th>\n                    <TableStyle.Th width_15>Date Start</TableStyle.Th>\n                    <TableStyle.Th width_15>Date End</TableStyle.Th>\n                    <TableStyle.Th width_15>Position</TableStyle.Th>\n                    <TableStyle.Th width_20>Location</TableStyle.Th>\n                    <TableStyle.Th width_5></TableStyle.Th>\n                    <TableStyle.Th width_5></TableStyle.Th>\n                </tr>\n                <tr>\n                    <TableStyle.Td>SiteMax Systems Inc.</TableStyle.Td>\n                    <TableStyle.Td>January, 2018</TableStyle.Td>\n                    <TableStyle.Td>December, 2019</TableStyle.Td>\n                    <TableStyle.Td>Junior Developer</TableStyle.Td>\n                    <TableStyle.Td>Vancouver, BC, Canada</TableStyle.Td>\n                    <TableStyle.Td>\n                        <TableStyle.Button onClick={_ => history.push(\"/admin/work-experiences/1\")}>\n                            <div>\n                                <FontAwesomeIcon icon={faEdit}/>\n                            </div>\n                        </TableStyle.Button>\n                    </TableStyle.Td>\n                    <TableStyle.Td>\n                        <TableStyle.Button onClick={_ => deleteWorkExperience(\"1\")}>\n                            <div>\n                                <FontAwesomeIcon icon={faTrashAlt}/>\n                            </div>\n                        </TableStyle.Button>\n                    </TableStyle.Td>\n                </tr>\n            </TableStyle.Table>\n            <WorkExperiencesScreenStyle.PaginationSection>\n                <Pagination/>\n            </WorkExperiencesScreenStyle.PaginationSection>\n        </WorkExperiencesScreenStyle.PageSection>\n    );\n}\n\nexport default WorkExperiencesScreen;\n","import React from 'react';\nimport styled from 'styled-components';\nimport constants from '../../constants';\n\nconst containerPadding = \"1.31rem\";\n\nconst HomeScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${containerPadding};\n        flex-grow: 1;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    `,\n    Span: styled.span`\n        font-size: 1.5rem;\n        color: ${constants.colorNavyBlue};\n    `\n};\n\nfunction HomeScreen() {\n    return (\n        <HomeScreenStyle.Section>\n            <HomeScreenStyle.Span>Welcome to our Portfolio Site Dashboard</HomeScreenStyle.Span>\n        </HomeScreenStyle.Section>\n    );\n}\n\nexport default HomeScreen;\n\n","import './App.css';\nimport { PrimaryNavMenu, SecondaryNavMenu } from './components/Navigation';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport InfoScreen from './screens/InfoScreen';\nimport ProjectDetailScreen from './screens/ProjectDetailScreen';\nimport ProjectsScreen from './screens/ProjectsScreen';\nimport WorkExperienceDetailScreen from './screens/WorkExperienceDetailScreen';\nimport WorkExperiencesScreen from './screens/WorkExperiencesScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport styled from 'styled-components';\n\nconst AppStyle = {\n  Main: styled.main`\n    margin: 2.39rem 1.5rem;\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n  `\n};\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <PrimaryNavMenu/>\n        <AppStyle.Main>\n          <SecondaryNavMenu/>\n          <Switch>\n            <Route path=\"/admin/info\" component={InfoScreen}/>\n            <Route path=\"/admin/projects/:id\" component={ProjectDetailScreen}/>\n            <Route path=\"/admin/projects\" component={ProjectsScreen}/>\n            <Route path=\"/admin/work-experiences/:id\" component={WorkExperienceDetailScreen}/>\n            <Route path=\"/admin/work-experiences\" component={WorkExperiencesScreen}/>\n            <Route exact path=\"/admin\" component={HomeScreen}/>\n        </Switch>\n        </AppStyle.Main>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}