{"version":3,"sources":["constants.js","components/Navigation/index.js","components/Form/index.js","components/Button/index.js","screens/InfoScreen/index.js","screens/ProjectDetailScreen/index.js","components/Pagination/index.js","components/Table/index.js","screens/ProjectsScreen/index.js","screens/WorkExperienceDetailScreen/index.js","screens/WorkExperiencesScreen/index.js","screens/HomeScreen/index.js","App.js","reportWebVitals.js","index.js"],"names":["PrimaryNavMenuStyle","Nav","styled","nav","constants","NavLinkNew","NavLink","PrimaryNavMenu","exact","to","UserStyle","Div","div","User","icon","faUser","SecondaryNavMenuStyle","Header","Span","span","SecondaryNavMenu","IconButtonStyle","Button","button","IconButton","props","onClick","children","AddMoreButtonStyle","Section","section","AddMoreButton","DateInputStyle","Input","input","InputStyle","InputListStyle","ButtonSection","FormGroup","KeyValueInputStyle","InputKey","InputValue","KeyValueInputListStyle","DateInput","defaultValue","onChange","type","InputList","list","map","item","index","objectKey","e","onDelete","faTrashAlt","id","onAdd","KeyValueInput","name","value","KeyValueInputList","ButtonStyle","primary","secondary","InfoScreenStyle","H2","h2","InfoScreen","useLocation","history","useHistory","useState","firstName","setFirstName","lastName","setLastName","nickName","setNickName","website","setWebsite","socials","_setSocials","contacts","_setContacts","addSocial","Array","isArray","length","addContact","editInfo","info","first_name","last_name","nick_name","fetch","method","headers","body","JSON","stringify","then","response","json","data","push","catch","error","console","useEffect","Form","target","eKey","eVal","setContact","_","splice","deleteContact","setSocial","deleteSocial","ProjectDetailScreenStyle","ProjectDetailScreen","location","setId","title","setTitle","date","setDate","headerImage","setHeaderImage","demoURL","setDemoURL","sourceURL","setSourceURL","techsUsedList","_setTechsUsed","highlightsList","_setHighlights","imagesList","_setImages","addTechUsed","addHighlight","addImage","addProject","project","header_image_url","demo_url","source_url","tech_used","highlights","images","editProject","getProject","path","Date","year","getFullYear","padStart","month","getMonth","day","getDate","getYYYYMMDD","pathname","includes","deleteProject","setTechsUsed","detail","setHighlight","deleteHighlight","url","setImage","deleteImage","bg_grey","TableStyle","Table","table","Th","th","width_25","width_20","width_15","width_5","Td","td","ProjectsScreenStyle","PageSection","PaginationSection","ProjectsScreen","projects","setProjects","a","findIndex","date_string","toLocaleString","short_description","join","faEdit","WorkExperienceDetailScreenStyle","WorkExperienceDetailScreen","company","setCompany","position","setPosition","companyLocation","setCompanyLocation","dateStart","setDateStart","dateEnd","setDateEnd","addWorkExperience","workExp","date_start","date_end","editWorkExperience","log","deleteWorkExperience","strftime","WorkExperiencesScreenStyle","WorkExperiencesScreen","workExperiences","setWorkExperiences","HomeScreenStyle","HomeScreen","AppStyle","Main","main","App","className","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b05e4e2.chunk.js","sourcesContent":["const colorNavyBlue = '#1A1E43';\nconst colorWhite = '#FFFFFF';\nconst colorGrey = '#D7D7D7';\nconst colorOrange = '#FF7927';\nconst colorLightGrey = '#E9E9E9';\nconst colorPurple = '#8A8DCC';\n\nconst borderRadius = \"0.94rem\";\nconst sectionPadding = \"1.31rem\";\n\nexport default {\n    colorNavyBlue,\n    colorWhite,\n    colorGrey,\n    colorOrange,\n    colorPurple,\n    colorLightGrey,\n    borderRadius,\n    sectionPadding\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport constants from '../../constants';\n\nconst PrimaryNavMenuStyle = {\n    Nav: styled.nav`\n        width: 15rem;\n        position: fixed;\n        height: calc(100vh - 4.78rem);\n        top: 0;\n        border-radius: 0.94rem;\n        background-color: ${constants.colorNavyBlue};\n        color: ${constants.colorWhite};\n        margin: 2.39rem 1.17rem;\n\n        h2 {\n            padding: 2.30rem 2.0rem;\n            margin: 0;\n        }\n\n        ul {\n            margin: 0;\n            padding: 0;\n            list-style-type: none;\n        }\n\n        li {\n            padding: 1.03rem 2.0rem;\n            Cursor: pointer;\n            width: calc(15rem - 2.0rem * 2);\n        }\n    `,\n    NavLinkNew : styled(NavLink)`\n        text-decoration: none;\n        color: ${constants.colorWhite};\n\n        &.active {\n            font-weight: bold;\n        }\n    `\n};\n\nfunction PrimaryNavMenu() {\n    return (\n        <PrimaryNavMenuStyle.Nav>\n            <h2>Menu</h2>\n            <ul>\n                <li><PrimaryNavMenuStyle.NavLinkNew exact to=\"/admin\">Home</PrimaryNavMenuStyle.NavLinkNew></li>\n                <li><PrimaryNavMenuStyle.NavLinkNew to=\"/admin/info\">Info</PrimaryNavMenuStyle.NavLinkNew></li>\n                <li><PrimaryNavMenuStyle.NavLinkNew to=\"/admin/projects\">Projects</PrimaryNavMenuStyle.NavLinkNew></li>\n                <li><PrimaryNavMenuStyle.NavLinkNew to=\"/admin/work-experiences\">Work Experience</PrimaryNavMenuStyle.NavLinkNew></li>\n            </ul>\n        </PrimaryNavMenuStyle.Nav>\n    );\n};\n\nconst UserStyle = {\n    Div: styled.div`\n        border: 1px solid ${constants.colorPurple};\n        padding: 0.8em;\n        display: inline-block;\n        border-radius: 50%;\n        margin-right: 1em;\n\n        div {\n            width: 1.25em;\n            height: 1.25em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        path {\n            fill: ${constants.colorPurple};\n        }\n    `\n};\n\nfunction User() {\n    return (\n        <UserStyle.Div>\n            <div>\n                <FontAwesomeIcon icon={faUser}/>\n            </div>\n        </UserStyle.Div>\n    );\n};\n\nconst SecondaryNavMenuStyle = {\n    Header: styled.nav`\n       border-radius: ${constants.borderRadius};\n       padding: 0.52rem;\n       display: flex;\n       justify-content: flex-end;\n       align-items: center;\n       margin: 0 0 2.06rem 0;\n    `,\n    Span: styled.span`\n        margin-right: 0.75rem;\n\n        strong {\n            color: ${constants.colorPurple};\n        }\n    `\n};\n\nfunction SecondaryNavMenu() {\n    return (\n        <SecondaryNavMenuStyle.Header>\n            <SecondaryNavMenuStyle.Span>Hello, <strong>Admin</strong></SecondaryNavMenuStyle.Span>\n            <User/>\n        </SecondaryNavMenuStyle.Header>\n    );\n};\n\n\n\nexport {\n    PrimaryNavMenu,\n    SecondaryNavMenu,\n};","import styled from 'styled-components';\nimport constants from '../../constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n\nconst IconButtonStyle = {\n    Button : styled.button`\n        background-color: transparent;\n        border: none;\n        padding: 0.5rem;\n        cursor: pointer;\n\n        div {\n            width: 1.1rem;\n            height: 1.1rem;\n        }\n    `\n};\n\nfunction IconButton(props) {\n    return (\n        <IconButtonStyle.Button onClick={props.onClick}>\n            {props.children}\n        </IconButtonStyle.Button>\n    )\n}\n\nconst AddMoreButtonStyle = {\n    Button: styled.button`\n        color: ${constants.colorWhite};\n        border: none;\n        background-color: ${constants.colorPurple};\n        border-radius: 0.14rem;\n        padding: 0.16rem;\n        cursor: pointer;\n    `,\n    Div: styled.div`\n        width: 1.1rem;\n        height: 1.1rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    `,\n    Section: styled.section`\n        display: flex;\n        justify-content: center;\n    `\n};\n\nfunction AddMoreButton(props) {\n    return(\n        <AddMoreButtonStyle.Section>\n            <AddMoreButtonStyle.Button onClick={props.onClick}>\n                <AddMoreButtonStyle.Div>\n                <strong>+</strong>\n                </AddMoreButtonStyle.Div>\n            </AddMoreButtonStyle.Button>\n        </AddMoreButtonStyle.Section>\n    );\n}\n\nconst DateInputStyle = {\n    Div: styled.div`\n        display: flex;\n    `,\n    Input: styled.input`\n        border: 1px solid ${constants.colorGrey};\n        background-color: ${constants.colorLightGrey};\n        padding: 0.56rem;\n        flex-grow: 1;\n    `\n};\n\n\nfunction DateInput(props) {\n    return(\n        <DateInputStyle.Div>\n            <DateInputStyle.Input\n                defaultValue={props.defaultValue}\n                onChange={props.onChange}\n                type=\"date\"\n            />\n        </DateInputStyle.Div>\n    )\n};\n\n\nconst InputStyle = {\n    Div: styled.div`\n        display: flex;\n    `,\n    Input: styled.input`\n        border: 1px solid ${constants.colorGrey};\n        background-color: ${constants.colorLightGrey};\n        padding: 0.56rem;\n        flex-grow: 1;\n    `\n};\n\n\nfunction Input(props) {\n    return(\n        <InputStyle.Div>\n            <InputStyle.Input\n                defaultValue={props.defaultValue}\n                onChange={props.onChange}\n            />\n        </InputStyle.Div>\n    )\n};\n\nconst InputListStyle = {\n    Div: styled(InputStyle.Div)`\n        margin: 0 0 0.23rem 0;\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: center;\n    `\n};\n\nfunction InputList(props) {\n    return(\n        <>\n            {props.list.map((item, index) => (\n                <InputListStyle.Div key={item.id}>\n                    <InputStyle.Input\n                        defaultValue={item[props.objectKey] ? item[props.objectKey] : \"\"}\n                        onChange={e => props.onChange(e, index)}\n                    />\n                    <IconButton onClick={e => props.onDelete(e, index)}>\n                        <div>\n                            <FontAwesomeIcon icon={faTrashAlt}/>\n                        </div>\n                    </IconButton>\n                </InputListStyle.Div>\n            ))}\n            <InputListStyle.ButtonSection>\n                <AddMoreButton onClick={props.onAdd}/>\n            </InputListStyle.ButtonSection>\n        </>\n    );\n}\n\nconst FormGroup = styled.div`\n    margin: 0 0 0.6rem 0;\n\n    & > label {\n        margin: 0 0 0.6rem 0;\n    }\n\n    & > * {\n        display: block;\n    }\n\n    & > div {\n        display: flex;\n    }\n`;\n\nconst KeyValueInputStyle = {\n    Div: styled.div`\n        margin: 0 0 0.23rem 0;\n    `,\n    InputKey: styled.input`\n        border: 1px solid ${constants.colorGrey};\n        background-color: ${constants.colorLightGrey};\n        padding: 0.56rem;\n\n        max-width: 10.31rem;\n        margin: 0 0.23rem 0 0;\n        flex-grow: initial;\n    `,\n    InputValue: styled.input`\n        border: 1px solid ${constants.colorGrey};\n        background-color: ${constants.colorLightGrey};\n        padding: 0.56rem;\n        flex-grow: 1;\n    `\n};\n\nfunction KeyValueInput(props) {\n    return(\n        <KeyValueInputStyle.Div>\n            <KeyValueInputStyle.InputKey\n                defaultValue={props.name ? props.name : \"\"}\n                onChange={e => props.onChange(e, null)}\n            />\n            <KeyValueInputStyle.InputValue\n                defaultValue={props.value ? props.value : \"\"}\n                onChange={e => props.onChange(null, e)}\n            />\n        </KeyValueInputStyle.Div>\n    )\n};\n\n\nconst KeyValueInputListStyle = {\n    Div: styled(KeyValueInputStyle.Div)`\n        margin: 0 0 0.23rem 0;\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: center;\n    `\n};\n\nfunction KeyValueInputList(props) {\n    return(\n        <>\n            {props.list.map((item, index) => (\n                <KeyValueInputListStyle.Div key={item.id}>\n                    <KeyValueInputStyle.InputKey\n                        defaultValue={item && item.name ? item.name : \"\"}\n                        onChange={e => props.onChange(e, null, index)}\n                    />\n                    <KeyValueInputStyle.InputValue\n                        defaultValue={item && item.value ? item.value : \"\"}\n                        onChange={e => props.onChange(null, e, index)}\n                    />\n                    <IconButton onClick={e => props.onDelete(e, index)}>\n                        <div>\n                            <FontAwesomeIcon icon={faTrashAlt}/>\n                        </div>\n                    </IconButton>\n                </KeyValueInputListStyle.Div>\n            ))}\n            <KeyValueInputListStyle.ButtonSection>\n                <AddMoreButton onClick={props.onAdd}/>\n            </KeyValueInputListStyle.ButtonSection>\n        </>\n    );\n}\n\n\nexport default {\n    DateInput,\n    Input,\n    InputList,\n    FormGroup,\n    KeyValueInput,\n    KeyValueInputList,\n    AddMoreButton,\n};","import styled from 'styled-components';\nimport constants from '../../constants';\n\nconst ButtonStyle = {\n    Button: styled.button`\n        border: transparent;\n        border-radius: ${constants.borderRadius};\n        background-color: ${props => {\n            if (props.primary) {\n                return constants.colorNavyBlue;\n            } else if (props.secondary) {\n                return constants.colorOrange;\n            }\n        }};\n        color: ${constants.colorWhite};\n        padding: 0.56rem;\n        cursor: pointer;\n\n    `,\n    Div: styled.div`\n        min-width: 6.09rem;\n    `\n}\n\nexport default function Button(props) {\n    return(\n        <ButtonStyle.Button {...props}>\n            <ButtonStyle.Div>\n                {props.children}\n            </ButtonStyle.Div>\n        </ButtonStyle.Button>\n    );\n}\n\nexport {\n    Button\n};","import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport Form from '../../components/Form'\nimport styled from 'styled-components';\nimport constants from '../../constants';\nimport Button from '../../components/Button';\n\n\nconst InfoScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${constants.sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n    `\n};\n\nfunction InfoScreen() {\n    const location = useLocation();\n    const history = useHistory();\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [nickName, setNickName] = useState(\"\");\n    const [website, setWebsite] = useState(\"\");\n    const [socials, _setSocials] = useState([]);\n    const [contacts, _setContacts] = useState([]);\n\n    const setSocial = (eKey, eVal, index, list) => {\n        list[index].name = eKey && eKey.target && eKey.target.value ? eKey.target.value : list[index].name;\n        list[index].value = eVal && eVal.target && eVal.target.value ? eVal.target.value : list[index].value;\n        _setSocials(list);\n    }\n\n    const addSocial = (list) => {\n        if (!Array.isArray(list) || list.length === 0) {\n            _setSocials([{\"name\": \"\", \"value\": \"\"}]);\n            return;\n        }\n        _setSocials([...list, {\"name\": \"\", \"value\": \"\"}]);\n    }\n\n    const deleteSocial = (index, list) => {\n        if (!list[index].id) {\n            list.splice(index, 1);\n            _setContacts([...list]);\n            return;\n        }\n\n        const id = list[index].id;\n        fetch(`http://localhost:4001/admin/info/socials/${id}`, {\n            method: \"DELETE\"\n        }).then(_ => {\n            list.splice(index, 1);\n            _setSocials([...list]);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const setContact = (eKey, eVal, index, list) => {\n        list[index].name = eKey && eKey.target && eKey.target.value ? eKey.target.value : list[index].name;\n        list[index].value = eVal && eVal.target && eVal.target.value ? eVal.target.value : list[index].value;\n        _setContacts(list);\n    }\n\n    const addContact = (list) => {\n        if (!Array.isArray(list) || list.length === 0) {\n            _setContacts([{\"name\": \"\", \"value\": \"\"}]);\n            return;\n        }\n        _setContacts([...list, {\"name\": \"\", \"value\": \"\"}]);\n    }\n\n    const deleteContact = (index, list) => {\n        if (!list[index].id) {\n            list.splice(index, 1);\n            _setContacts([...list]);\n            return;\n        }\n\n        const id = list[index].id;\n        fetch(`http://localhost:4001/admin/info/contacts/${id}`, {\n            method: \"DELETE\"\n        }).then(_ => {\n            list.splice(index, 1);\n            _setContacts([...list]);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const editInfo = (e, history) => {\n        const info = {\n            first_name: firstName,\n            last_name: lastName,\n            nick_name: nickName,\n            website: website,\n            contacts: contacts,\n            socials: socials\n        };\n\n        fetch(`http://localhost:4001/admin/info`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(info)\n        })\n        .then(response => response.json())\n        .then(data => {\n            history.push(`/admin/info`);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const getInfo = () => {\n        fetch(\"http://localhost:4001/admin/info\")\n        .then(response => response.json())\n        .then(data => {\n            setFirstName(data.first_name);\n            setLastName(data.last_name);\n            setNickName(data.nick_name);\n            setWebsite(data.website);\n            if (data.contacts.length === 0) {\n                addContact(contacts);\n            } else {\n                _setContacts(data.contacts);\n            }\n            if (data.socials.length === 0) {\n                addSocial(socials);\n            } else {\n                _setSocials(data.socials);\n            }\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n\n    useEffect(() => {\n        getInfo();\n    }, []);\n\n    return (\n        <InfoScreenStyle.Section>\n            <InfoScreenStyle.H2>Personal Information</InfoScreenStyle.H2>\n            <InfoScreenStyle.ButtonSection>\n                <Button primary onClick={e => editInfo(e, history)}>\n                    Save\n                </Button>\n            </InfoScreenStyle.ButtonSection>\n            <form>\n                <Form.FormGroup>\n                    <label>First Name</label>\n                    <Form.Input\n                        defaultValue={firstName}\n                        onChange={e => setFirstName(e.target.value)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Last Name</label>\n                    <Form.Input\n                        defaultValue={lastName}\n                        onChange={e => setLastName(e.target.value)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Nick Name</label>\n                    <Form.Input\n                        defaultValue={nickName}\n                        onChange={e => setNickName(e.target.value)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Website</label>\n                    <Form.Input\n                        defaultValue={website}\n                        onChange={e => setWebsite(e.target.value)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Contact</label>\n                    <Form.KeyValueInputList\n                        list={contacts}\n                        onChange={(eKey, eVal, index) => setContact(eKey, eVal, index, contacts)}\n                        onAdd={_ => addContact(contacts)}\n                        onDelete={(e, index) => deleteContact(index, contacts)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Socials</label>\n                    <Form.KeyValueInputList\n                        list={socials}\n                        onChange={(eKey, eVal, index) => setSocial(eKey, eVal, index, socials)}\n                        onAdd={_ => addSocial(socials)}\n                        onDelete={(e, index) => deleteSocial(index, socials)}\n                    />\n                </Form.FormGroup>\n            </form>\n            <InfoScreenStyle.ButtonSection>\n                <Button primary onClick={e => editInfo(e, history)}>\n                    Save\n                </Button>\n            </InfoScreenStyle.ButtonSection>\n        </InfoScreenStyle.Section>\n    );\n}\n\nexport default InfoScreen;\n\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport Form from '../../components/Form'\nimport styled from 'styled-components';\nimport constants from '../../constants';\nimport { Button } from '../../components/Button';\n\n\nconst getYYYYMMDD = (date) => {\n    date = new Date(date);\n    const year = `${date.getFullYear()}`.padStart(4,\"0\");\n    const month = `${date.getMonth()+1}`.padStart(2, \"0\");\n    const day = `${date.getDate()}`.padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n}\n\nconst ProjectDetailScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${constants.sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n\n        button:not(:last-child) {\n            margin: 0 0.47rem 0 0;\n        }\n    `\n};\n\nfunction ProjectDetailScreen() {\n    const location = useLocation();\n    const history = useHistory();\n\n    const [id, setId] = useState(0);\n    const [title, setTitle] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [headerImage, setHeaderImage] = useState(\"\");\n    const [demoURL, setDemoURL] = useState(\"\");\n    const [sourceURL, setSourceURL] = useState(\"\");\n    const [techsUsedList, _setTechsUsed] = useState([]);\n    const [highlightsList, _setHighlights] = useState([]);\n    const [imagesList, _setImages] = useState([]);\n\n    const addTechUsed = (list) => {\n        _setTechsUsed([...list, {\"name\": \"\"}]);\n    }\n\n    const setTechsUsed = (e, index, list) => {\n        list[index].name = e.target.value;\n        _setTechsUsed(list);\n    }\n\n    const deleteTechUsed = (index, list) => {\n        if (!list[index].id) {\n            list.splice(index, 1);\n            _setTechsUsed([...list]);\n            return;\n        }\n\n        const id = list[index].id;\n        fetch(`http://localhost:4001/admin/projects/techs-used/${id}`, {\n            method: \"DELETE\"\n        }).then(_ => {\n            list.splice(index, 1);\n            _setTechsUsed([...list]);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const addHighlight = (list) => {\n        _setHighlights([...list, {\"detail\": \"\"}]);\n    }\n\n    const setHighlight = (e, index, list) => {\n        list[index].detail = e.target.value;\n        _setHighlights(list);\n    }\n\n    const deleteHighlight = (index, list) => {\n        if (!list[index].id) {\n            list.splice(index, 1);\n            _setHighlights([...list]);\n            return;\n        }\n\n        const id = list[index].id;\n        fetch(`http://localhost:4001/admin/projects/highlights/${id}`, {\n            method: \"DELETE\"\n        }).then(_ => {\n            list.splice(index, 1);\n            _setHighlights([...list]);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const addImage = (list) => {\n        _setImages([...list, {\"url\": \"\"}]);\n    }\n\n    const setImage = (e, index, list) => {\n        list[index].url = e.target.value;\n        _setImages(list);\n    }\n\n    const deleteImage = (index, list) => {\n        if (!list[index].id) {\n            list.splice(index, 1);\n            _setImages([...list]);\n            return;\n        }\n\n        const id = list[index].id;\n        fetch(`http://localhost:4001/admin/projects/images/${id}`, {\n            method: \"DELETE\"\n        }).then(_ => {\n            list.splice(index, 1);\n            _setImages([...list]);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const addProject =  (e, history) => {\n        const project = {\n            title: title,\n            date: date,\n            header_image_url: headerImage,\n            demo_url: demoURL,\n            source_url: sourceURL,\n            tech_used: techsUsedList,\n            highlights: highlightsList,\n            images: imagesList\n        };\n\n        fetch(`http://localhost:4001/admin/projects`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(project)\n        })\n        .then(response => response.json())\n        .then(data => {\n            history.push(`/admin/projects/${data.id}`);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const editProject = (e, history) => {\n        const project = {\n            id: id,\n            title: title,\n            date: date,\n            header_image_url: headerImage,\n            demo_url: demoURL,\n            source_url: sourceURL,\n            tech_used: techsUsedList,\n            highlights: highlightsList,\n            images: imagesList\n        };\n\n        fetch(`http://localhost:4001/admin/projects/${id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(project)\n        })\n        .then(response => response.json())\n        .then(data => {\n            history.push(`/admin/projects/${id}`);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const deleteProject = (e, history) => {\n        fetch(`http://localhost:4001/admin/projects/${id}`, {\n            method: \"DELETE\"\n        })\n        .then(_ => {\n            history.push(`/admin/projects`);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const getProject = (path) => {\n        const domain = \"http://localhost:4001\";\n        fetch(`${domain}${path}`)\n        .then(response => response.json())\n        .then(data => {\n            setId(data.id);\n            setTitle(data.title);\n            setDate(getYYYYMMDD(data.date));\n            setHeaderImage(data.header_image_url);\n            setDemoURL(data.demo_url);\n            setSourceURL(data.source_url);\n            _setHighlights(data.highlights);\n            _setTechsUsed(data.tech_used);\n            _setImages(data.images);\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n\n    useEffect(() => {\n        if (location.pathname.includes(\"/new\")) {\n            addTechUsed(techsUsedList);\n            addHighlight(highlightsList);\n            addImage(imagesList);\n        } else {\n            getProject(location.pathname);\n        }\n    }, []);\n\n    return (\n        <ProjectDetailScreenStyle.Section>\n            <ProjectDetailScreenStyle.H2>Portfolio Dashboard</ProjectDetailScreenStyle.H2>\n            <ProjectDetailScreenStyle.ButtonSection>\n                {\n                    !location.pathname.includes(\"/new\") ?\n                        <Button secondary onClick={e => deleteProject(e, history)}>\n                            Delete\n                        </Button>\n                    : null\n                }\n                <Button primary onClick={e => location.pathname.includes(\"/new\") ? addProject(e, history) : editProject(e, history)}>\n                    Save\n                </Button>\n            </ProjectDetailScreenStyle.ButtonSection>\n            <form>\n                <Form.FormGroup>\n                    <label>Title</label>\n                    <Form.Input\n                        defaultValue={title}\n                        onChange={e => setTitle(e.target.value)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Date</label>\n                    <Form.DateInput\n                        defaultValue={date}\n                        onChange={e => setDate(e.target.value)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Header Image</label>\n                    <Form.Input\n                        defaultValue={headerImage}\n                        onChange={e => setHeaderImage(e.target.value)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Demo URL</label>\n                    <Form.Input\n                        defaultValue={demoURL}\n                        onChange={e => setDemoURL(e.target.value)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Source URL</label>\n                    <Form.Input\n                        defaultValue={sourceURL}\n                        onChange={e => setSourceURL(e.target.value)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Techs Used</label>\n                    <Form.InputList\n                        list={techsUsedList}\n                        objectKey=\"name\"\n                        onChange={(e, index) => setTechsUsed(e, index, techsUsedList)}\n                        onAdd={_ => addTechUsed(techsUsedList)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Highlights</label>\n                    <Form.InputList\n                        list={highlightsList}\n                        objectKey=\"detail\"\n                        onChange={(e, index) => setHighlight(e, index, highlightsList)}\n                        onAdd={_ => addHighlight(highlightsList)}\n                        onDelete={(e, index) => deleteHighlight(index, highlightsList)}\n                    />\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Images</label>\n                    <Form.InputList\n                        list={imagesList}\n                        objectKey=\"url\"\n                        onChange={(e, index) => setImage(e, index, imagesList)}\n                        onAdd={_ => addImage(imagesList)}\n                        onDelete={(e, index) => deleteImage(index, imagesList)}\n                    />\n                </Form.FormGroup>\n            </form>\n            <ProjectDetailScreenStyle.ButtonSection>\n                <Button primary onClick={e => location.pathname.includes(\"/new\") ? addProject(e, history) : editProject(e, history)}>\n                    Save\n                </Button>\n            </ProjectDetailScreenStyle.ButtonSection>\n        </ProjectDetailScreenStyle.Section>\n    );\n}\n\nexport default ProjectDetailScreen;\n\n","import styled from 'styled-components';\nimport constants from '../../constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nconst PaginationStyle = {\n    Button: styled.button`\n        border: ${constants.colorGrey};\n        padding: 0.28rem;\n        background-color: ${props => {\n            if (props.bg_grey) {\n                return constants.colorGrey;\n            } else {\n                return constants.colorWhite;\n            }\n        }};\n        cursor: pointer;\n    `\n};\n\nexport default function Pagination() {\n    return(\n        <div>\n            <PaginationStyle.Button bg_grey>\n                <FontAwesomeIcon icon={faChevronLeft}/>\n            </PaginationStyle.Button>\n            <PaginationStyle.Button>1</PaginationStyle.Button>\n            <PaginationStyle.Button>2</PaginationStyle.Button>\n            <PaginationStyle.Button>3</PaginationStyle.Button>\n            <PaginationStyle.Button bg_grey>\n                <FontAwesomeIcon icon={faChevronRight}/>\n            </PaginationStyle.Button>\n        </div>\n    );\n}\n","import styled from 'styled-components';\nimport constants from '../../constants';\n\nexport const TableStyle = {\n    Table: styled.table`\n        width: 100%;\n        border-collapse: collapse;\n        margin: 0;\n    `,\n    Th: styled.th`\n        background-color: ${constants.colorLightGrey};\n        font-weight: normal;\n        text-align: left;\n        padding: 0.75rem;\n        width: ${props => {\n            if (props.width_25) {\n                return \"25%\";\n            } else if (props.width_20) {\n                return \"20  %\";\n            } else if (props.width_15) {\n                return \"15%\";\n            } else if (props.width_5) {\n                return \"5%\";\n            }\n        }}\n    `,\n    Td: styled.td`\n        padding: 0.75rem;\n    `,\n    Button: styled.button`\n        background-color: transparent;\n        border: none;\n        padding: 0.16rem;\n        cursor: pointer;\n\n        div {\n            width: 1.1rem;\n            height: 1.1rem;\n        }\n    `\n}\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Pagination from '../../components/Pagination';\nimport constants from '../../constants';\nimport { Button } from '../../components/Button';\nimport { TableStyle } from '../../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router';\n\nconst strftime = (date_string) => {\n    const date = new Date(date_string);\n    let options = { year: 'numeric', month: 'long', day: 'numeric' };\n\n    return date.toLocaleString('en-US', options);\n}\n\nconst ProjectsScreenStyle = {\n    PageSection: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${constants.sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n    `,\n    PaginationSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n    `\n};\n\nfunction ProjectsScreen() {\n    let history = useHistory();\n    const [projects, setProjects] = useState([]);\n\n    const deleteProject =  async (id) => {\n        fetch(`http://localhost:4001/admin/projects/${id}`, {\n            method: \"DELETE\"\n        }).then(_ => {\n            const index = projects.findIndex(item => item.id === id);\n            projects.splice(index, 1);\n            setProjects([...projects]);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const getProjects = () => {\n        fetch(\"http://localhost:4001/admin/projects\")\n        .then(response => response.json())\n        .then(data => setProjects(data))\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n\n    useEffect(() => {\n        getProjects();\n    }, []);\n\n    return (\n        <ProjectsScreenStyle.PageSection>\n            <ProjectsScreenStyle.H2>Projects</ProjectsScreenStyle.H2>\n            <ProjectsScreenStyle.ButtonSection>\n                <Button primary onClick={_ => history.push(\"/admin/projects/new\")}>\n                    Add\n                </Button>\n            </ProjectsScreenStyle.ButtonSection>\n            <TableStyle.Table>\n                <thead>\n                    <tr>\n                        <TableStyle.Th width_25>Name</TableStyle.Th>\n                        <TableStyle.Th width_15>Date</TableStyle.Th>\n                        <TableStyle.Th width_25>Short Description</TableStyle.Th>\n                        <TableStyle.Th width_25>Tools Used</TableStyle.Th>\n                        <TableStyle.Th width_5></TableStyle.Th>\n                        <TableStyle.Th width_5></TableStyle.Th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        projects.map(item => (\n                            <tr>\n                                <TableStyle.Td>{item.title}</TableStyle.Td>\n                                <TableStyle.Td>{strftime(item.date)}</TableStyle.Td>\n                                <TableStyle.Td>{item.short_description}</TableStyle.Td>\n                                <TableStyle.Td>{item.tech_used.map(item => item.name).join(\", \")}</TableStyle.Td>\n                                <TableStyle.Td>\n                                    <TableStyle.Button onClick={_ => history.push(`/admin/projects/${item.id}`)}>\n                                        <div>\n                                            <FontAwesomeIcon icon={faEdit}/>\n                                        </div>\n                                    </TableStyle.Button>\n                                </TableStyle.Td>\n                                <TableStyle.Td>\n                                    <TableStyle.Button onClick={_ => deleteProject(item.id)}>\n                                        <div>\n                                            <FontAwesomeIcon icon={faTrashAlt}/>\n                                        </div>\n                                    </TableStyle.Button>\n                                </TableStyle.Td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </TableStyle.Table>\n            {/* <ProjectsScreenStyle.PaginationSection>\n                <Pagination/>\n            </ProjectsScreenStyle.PaginationSection> */}\n        </ProjectsScreenStyle.PageSection>\n    );\n}\n\nexport default ProjectsScreen;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport Form from '../../components/Form'\nimport styled from 'styled-components';\nimport constants from '../../constants';\nimport { Button } from '../../components/Button';\n\n\nconst getYYYYMMDD = (date) => {\n    date = new Date(date);\n    const year = `${date.getFullYear()}`.padStart(4,\"0\");\n    const month = `${date.getMonth()+1}`.padStart(2, \"0\");\n    const day = `${date.getDate()}`.padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n}\n\nconst WorkExperienceDetailScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${constants.sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n\n        button:not(:last-child) {\n            margin: 0 0.47rem 0 0;\n        }\n    `\n};\n\nfunction WorkExperienceDetailScreen() {\n    const location = useLocation();\n    const history = useHistory();\n\n    const [id, setId] = useState(0);\n    const [company, setCompany] = useState(\"\");\n    const [position, setPosition] = useState(\"\");\n    const [companyLocation, setCompanyLocation] = useState(\"\");\n    const [dateStart, setDateStart] = useState(\"\");\n    const [dateEnd, setDateEnd] = useState(\"\");\n    const [techsUsedList, _setTechsUsed] = useState([]);\n    const [highlightsList, _setHighlights] = useState([]);\n\n    const addTechUsed = (list) => {\n        _setTechsUsed([...list, {\"name\": \"\"}]);\n    }\n\n    const setTechsUsed = (e, index, list) => {\n        list[index].name = e.target.value;\n        _setTechsUsed(list);\n    }\n\n    const addHighlight = (list) => {\n        _setHighlights([...list, {\"detail\": \"\"}]);\n    }\n\n    const setHighlight = (e, index, list) => {\n        list[index].detail = e.target.value;\n        _setHighlights(list);\n    }\n\n    const addWorkExperience =  (e, history) => {\n        const workExp = {\n            company: company,\n            position: position,\n            location: companyLocation,\n            date_start: dateStart,\n            date_end: dateEnd,\n            tech_used: techsUsedList,\n            highlights: highlightsList,\n        };\n\n        fetch(`http://localhost:4001/admin/work-experiences`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(workExp)\n        })\n        .then(response => response.json())\n        .then(data => {\n            history.push(`/admin/work-experiences/${data.id}`);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const editWorkExperience = (e, history) => {\n        const workExp = {\n            id: id,\n            company: company,\n            position: position,\n            location: companyLocation,\n            date_start: dateStart,\n            date_end: dateEnd,\n            tech_used: techsUsedList,\n            highlights: highlightsList,\n        };\n\n        fetch(`http://localhost:4001/admin/work-experiences/${id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(workExp)\n        })\n        .then(response => response.json())\n        .then(data => {\n            history.push(`/admin/work-experiences/${id}`);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const deleteWorkExperience = (e, history) => {\n        fetch(`http://localhost:4001/admin/work-experiences/${id}`, {\n            method: \"DELETE\"\n        })\n        .then(_ => {\n            history.push(`/admin/work-experiences`);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const getWorkExperience = (path) => {\n        const domain = \"http://localhost:4001\";\n        fetch(`${domain}${path}`)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            setId(data.id);\n            setCompany(data.company);\n            setPosition(data.position);\n            setCompanyLocation(data.location);\n            setDateStart(getYYYYMMDD(data.date_start));\n            setDateEnd(getYYYYMMDD(data.date_end));\n            _setHighlights(data.highlights);\n            _setTechsUsed(data.tech_used);\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n\n    useEffect(() => {\n        if (location.pathname.includes(\"/new\")) {\n            addTechUsed(techsUsedList);\n            addHighlight(highlightsList);\n        } else {\n            getWorkExperience(location.pathname);\n        }\n    }, []);\n\n\n    return (\n        <WorkExperienceDetailScreenStyle.Section>\n            <WorkExperienceDetailScreenStyle.H2>{id ? `${company} - ${position}` : \"New Work Experience\"}</WorkExperienceDetailScreenStyle.H2>\n            <WorkExperienceDetailScreenStyle.ButtonSection>\n                {\n                    !location.pathname.includes(\"/new\") ?\n                        <Button secondary onClick={e => deleteWorkExperience(e, history)}>\n                            Delete\n                        </Button>\n                    : null\n                }\n                <Button primary onClick={e => location.pathname.includes(\"/new\") ? addWorkExperience(e, history) : editWorkExperience(e, history)}>\n                    Save\n                </Button>\n            </WorkExperienceDetailScreenStyle.ButtonSection>\n            <form>\n                <Form.FormGroup>\n                    <label>Company Name</label>\n                    <Form.Input defaultValue={company} onChange={e => setCompany(e.target.value)}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Position</label>\n                    <Form.Input defaultValue={position} onChange={e => setPosition(e.target.value)}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Date Start</label>\n                    <Form.DateInput defaultValue={dateStart} onChange={e => setDateStart(e.target.value)}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Date End</label>\n                    <Form.DateInput defaultValue={dateEnd} onChange={e => setDateEnd(e.target.value)}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Location</label>\n                    <Form.Input defaultValue={companyLocation} onChange={e => setCompanyLocation(e.target.value)}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Techs Used</label>\n                    <Form.InputList list={techsUsedList} objectKey=\"name\" onChange={(e, index) => setTechsUsed(e, index, techsUsedList)} onAdd={_ => addTechUsed(techsUsedList)}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Highlights</label>\n                    <Form.InputList list={highlightsList} objectKey=\"detail\" onChange={(e, index) => setHighlight(e, index, highlightsList)} onAdd={_ => addHighlight(highlightsList)}/>\n                </Form.FormGroup>\n            </form>\n            <WorkExperienceDetailScreenStyle.ButtonSection>\n                <Button primary onClick={e => location.pathname.includes(\"/new\") ? addWorkExperience(e, history) : editWorkExperience(e, history)}>\n                    Save\n                </Button>\n            </WorkExperienceDetailScreenStyle.ButtonSection>\n        </WorkExperienceDetailScreenStyle.Section>\n    );\n}\n\nexport default WorkExperienceDetailScreen;\n\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Pagination from '../../components/Pagination';\nimport { TableStyle } from '../../components/Table';\nimport constants from '../../constants';\nimport { Button } from '../../components/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router';\n\n\nconst strftime = (date_string) => {\n    const date = new Date(date_string);\n    let options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleString('en-US', options);\n}\n\nconst WorkExperiencesScreenStyle = {\n    PageSection: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${constants.sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n    `,\n    PaginationSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n    `\n};\n\nfunction WorkExperiencesScreen() {\n    let history = useHistory();\n    const [workExperiences, setWorkExperiences] = useState([]);\n\n    const deleteWorkExperience =  async (id) => {\n        fetch(`http://localhost:4001/admin/work-experiences/${id}`, {\n            method: \"DELETE\"\n        }).then(_ => {\n            const index = workExperiences.findIndex(item => item.id === id);\n            workExperiences.splice(index, 1);\n            setWorkExperiences([...workExperiences]);\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    const getWorkExperiences = () => {\n        fetch(\"http://localhost:4001/admin/work-experiences\")\n        .then(response => response.json())\n        .then(data => setWorkExperiences(data))\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n\n    useEffect(() => {\n        getWorkExperiences();\n    }, []);\n\n    return (\n        <WorkExperiencesScreenStyle.PageSection>\n            <WorkExperiencesScreenStyle.H2>Work Experiences</WorkExperiencesScreenStyle.H2>\n            <WorkExperiencesScreenStyle.ButtonSection>\n                <Button primary onClick={_ => history.push(\"/admin/work-experiences/new\")}>\n                    Add\n                </Button>\n            </WorkExperiencesScreenStyle.ButtonSection>\n            <TableStyle.Table>\n                <thead>\n                    <tr>\n                        <TableStyle.Th width_25>Company Name</TableStyle.Th>\n                        <TableStyle.Th width_15>Date Start</TableStyle.Th>\n                        <TableStyle.Th width_15>Date End</TableStyle.Th>\n                        <TableStyle.Th width_15>Position</TableStyle.Th>\n                        <TableStyle.Th width_20>Location</TableStyle.Th>\n                        <TableStyle.Th width_5></TableStyle.Th>\n                        <TableStyle.Th width_5></TableStyle.Th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {workExperiences.map(item => (\n                        <tr key={item.id}>\n                            <TableStyle.Td>{item.company}</TableStyle.Td>\n                            <TableStyle.Td>{strftime(item.date_start)}</TableStyle.Td>\n                            <TableStyle.Td>{strftime(item.date_end)}</TableStyle.Td>\n                            <TableStyle.Td>{item.position}</TableStyle.Td>\n                            <TableStyle.Td>{item.location}</TableStyle.Td>\n                            <TableStyle.Td>\n                                <TableStyle.Button onClick={_ => history.push(`/admin/work-experiences/${item.id}`)}>\n                                    <div>\n                                        <FontAwesomeIcon icon={faEdit}/>\n                                    </div>\n                                </TableStyle.Button>\n                            </TableStyle.Td>\n                            <TableStyle.Td>\n                                <TableStyle.Button onClick={_ => deleteWorkExperience(item.id)}>\n                                    <div>\n                                        <FontAwesomeIcon icon={faTrashAlt}/>\n                                    </div>\n                                </TableStyle.Button>\n                            </TableStyle.Td>\n                        </tr>\n                    ))}\n                </tbody>\n            </TableStyle.Table>\n            {/* <WorkExperiencesScreenStyle.PaginationSection>\n                <Pagination/>\n            </WorkExperiencesScreenStyle.PaginationSection> */}\n        </WorkExperiencesScreenStyle.PageSection>\n    );\n}\n\nexport default WorkExperiencesScreen;\n","import React from 'react';\nimport styled from 'styled-components';\nimport constants from '../../constants';\n\n\nconst HomeScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${constants.sectionPadding};\n        flex-grow: 1;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    `,\n    Span: styled.span`\n        font-size: 1.5rem;\n        color: ${constants.colorNavyBlue};\n    `\n};\n\nfunction HomeScreen() {\n    return (\n        <HomeScreenStyle.Section>\n            <HomeScreenStyle.Span>Welcome to our Portfolio Site Dashboard</HomeScreenStyle.Span>\n        </HomeScreenStyle.Section>\n    );\n}\n\nexport default HomeScreen;\n\n","import './App.css';\nimport { PrimaryNavMenu, SecondaryNavMenu } from './components/Navigation';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport InfoScreen from './screens/InfoScreen';\nimport ProjectDetailScreen from './screens/ProjectDetailScreen';\nimport ProjectsScreen from './screens/ProjectsScreen';\nimport WorkExperienceDetailScreen from './screens/WorkExperienceDetailScreen';\nimport WorkExperiencesScreen from './screens/WorkExperiencesScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport styled from 'styled-components';\n\nconst AppStyle = {\n  Main: styled.main`\n    margin: 2.39rem 1.5rem 2.39rem 17.34rem;\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n  `\n};\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <PrimaryNavMenu/>\n        <AppStyle.Main>\n          <SecondaryNavMenu/>\n          <Switch>\n            <Route path=\"/admin/info\" component={InfoScreen}/>\n            <Route path=\"/admin/projects/:id\" component={ProjectDetailScreen}/>\n            <Route path=\"/admin/projects/new\" component={ProjectDetailScreen}/>\n            <Route path=\"/admin/projects\" component={ProjectsScreen}/>\n            <Route path=\"/admin/work-experiences/:id\" component={WorkExperienceDetailScreen}/>\n            <Route path=\"/admin/work-experiences/new\" component={WorkExperienceDetailScreen}/>\n            <Route path=\"/admin/work-experiences\" component={WorkExperiencesScreen}/>\n            <Route exact path=\"/admin\" component={HomeScreen}/>\n        </Switch>\n        </AppStyle.Main>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}